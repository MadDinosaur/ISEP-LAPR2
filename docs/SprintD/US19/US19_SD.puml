@startuml

autonumber

actor ":System\n Clock:" as Clock
participant DailyReportTimer as drtimer
participant "timer : Timer" as timer
participant DailyReportController as controller
participant CreateNhsReportController as controller1
participant Company as company
participant "writeReport : WriteReport" as writereport
participant ExternalModuleNhsReport as interface
participant ExternalModuleNhsReportAdapter as adapter

activate Clock
activate drtimer
create timer
drtimer --> timer : create()
drtimer -> timer : schedule(task, delay, period)
activate timer
deactivate timer
deactivate drtimer

note over drtimer, timer : Clock will trigger at 6.00 am, executing the daily report functionality

Clock -> timer : clock hits at 6.00 am
activate timer
create controller
timer -> controller : create()
timer -> controller : run()
deactivate timer
activate controller

controller -> controller1 : setHistoricalPoints(historicalPoints)
activate controller1
deactivate controller1
controller -> controller1 : setInitialDay(initialDay)
activate controller1
deactivate controller1
controller -> controller1 : setFinalDay(finalDay)
activate controller1
deactivate controller1
controller -> controller1 : setIndependentVariable(independentVariable);
activate controller1
deactivate controller1
controller -> controller1 : report = createNhsReportController.makeRegression();
activate controller1
controller1 -> company : makeMultiLinearRegressionReport(historicalPoints, dateCurrentDay, dateInitalDay, dateDayFinal)
activate company
create writereport
company -> writereport : create()
company -> writereport : WriteReport(testStore, historicalPoints, dateCurrentDay, dateInitalDay, dateDayFinal);
activate writereport
deactivate writereport
deactivate company
deactivate controller1


controller -> interface : sendReport(report)
activate interface
interface -> adapter : sendReport(string)
activate adapter
deactivate interface
deactivate adapter
deactivate controller

deactivate Clock

@enduml